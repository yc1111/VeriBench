if (${SYSTEM} STREQUAL "GLASSDB")
  AUX_SOURCE_DIRECTORY(glassdb glassdb_srcs)
  LIST(APPEND srcs ${glassdb_srcs})

  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libdist.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libledger.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/librocksdb.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libcrypto++.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libprotobuf.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent_pthreads.so)
elseif (${SYSTEM} STREQUAL "LEDGERDB")
  AUX_SOURCE_DIRECTORY(ledgerdb ledgerdb_srcs)
  LIST(APPEND srcs ${ledgerdb_srcs})

  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libdist.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libledger.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/librocksdb.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libcrypto++.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libprotobuf.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent_pthreads.so)
elseif (${SYSTEM} STREQUAL "SQLLEDGER")
  AUX_SOURCE_DIRECTORY(sqlledger sqlledger_srcs)
  LIST(APPEND srcs ${sqlledger_srcs})

  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libdist.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libledger.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/librocksdb.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libcrypto++.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libprotobuf.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent_pthreads.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS boost_thread)
elseif (${SYSTEM} STREQUAL "QLDB")
  AUX_SOURCE_DIRECTORY(qldb qldb_srcs)
  LIST(APPEND srcs ${qldb_srcs})

  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libdist.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/libledger.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/local/lib/librocksdb.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libcrypto++.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libprotobuf.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent.so)
  LIST(APPEND VERIBENCH_LINKER_LIBS /usr/lib/x86_64-linux-gnu/libevent_pthreads.so)
elseif (${SYSTEM} STREQUAL "MERKLE2")
  AUX_SOURCE_DIRECTORY(merkle2 merkle2_srcs)
  LIST(APPEND srcs ${merkle2_srcs})

  LIST(APPEND VERIBENCH_LINKER_LIBS ${CMAKE_SOURCE_DIR}/dbs/merkle2/lib/merklesquare_go.a)
  LIST(APPEND VERIBENCH_LINKER_LIBS crypto)
elseif (${SYSTEM} STREQUAL "CCF")
  AUX_SOURCE_DIRECTORY(ccf ccf_srcs)
  LIST(APPEND srcs ${ccf_srcs})

  LIST(APPEND VERIBENCH_LINKER_LIBS curl)
endif()


ADD_LIBRARY(db_objs OBJECT ${srcs})
ADD_LIBRARY(db SHARED $<TARGET_OBJECTS:db_objs>)
TARGET_LINK_LIBRARIES(db ${VERIBENCH_LINKER_LIBS})
