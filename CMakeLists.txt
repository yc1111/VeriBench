CMAKE_MINIMUM_REQUIRED(VERSION 3.12)

PROJECT(veribench)

SET(SYSTEM "LEDGERDB" CACHE STRING "System under evaluation")

if (${SYSTEM} STREQUAL "GLASSDB")
  add_definitions(-DUSE_GLASSDB)
  message(STATUS "Use GlassDB")
  LIST(APPEND VERIBENCH_INCLUDE_DIR "/usr/local/include/glassdb/distributed")
  LIST(APPEND VERIBENCH_INCLUDE_DIR "/usr/local/include/glassdb")
elseif (${SYSTEM} STREQUAL "LEDGERDB")
  add_definitions(-DUSE_LEDGERDB)
  message(STATUS "Use LedgerDB")
  LIST(APPEND VERIBENCH_INCLUDE_DIR "/usr/local/include/LedgerDatabase")
elseif (${SYSTEM} STREQUAL "SQLLEDGER")
  add_definitions(-DUSE_SQLLEDGER)
  message(STATUS "Use SQL Ledger")
  LIST(APPEND VERIBENCH_INCLUDE_DIR "/usr/local/include/LedgerDatabase")
elseif (${SYSTEM} STREQUAL "QLDB")
  add_definitions(-DUSE_QLDB)
  message(STATUS "Use QLDB")
  LIST(APPEND VERIBENCH_INCLUDE_DIR "/usr/local/include/LedgerDatabase")
elseif (${SYSTEM} STREQUAL "MERKLE2")
  add_definitions(-DUSE_MERKLE2)
  message(STATUS "Use MERKLE2")
  LIST(APPEND VERIBENCH_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/dbs/merkle2/include")
else ()
  add_definitions(-DUSE_CCF)
  message(STATUS "Use CCF")
endif()

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O2 -pthread -lssl -Wall -Wno-unused-function -fPIC")
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

LIST(APPEND VERIBENCH_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/dbadapter")
LIST(APPEND VERIBENCH_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/workload")
INCLUDE_DIRECTORIES(${VERIBENCH_INCLUDE_DIR})

ADD_SUBDIRECTORY(dbadapter)
ADD_SUBDIRECTORY(workload)
ADD_SUBDIRECTORY(exps)
